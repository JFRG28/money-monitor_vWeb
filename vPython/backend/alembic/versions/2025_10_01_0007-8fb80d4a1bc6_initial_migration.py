"""Initial migration

Revision ID: 8fb80d4a1bc6
Revises: 
Create Date: 2025-10-01 00:07:48.034629+00:00

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8fb80d4a1bc6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('tipos_gasto_nombre_key'), table_name='tipos_gasto')
    op.drop_table('tipos_gasto')
    op.drop_index(op.f('categorias_codigo_key'), table_name='categorias')
    op.drop_table('categorias')
    op.drop_index(op.f('formas_pago_nombre_key'), table_name='formas_pago')
    op.drop_table('formas_pago')
    op.alter_column('balance', 'tipo',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('balance', 'concepto',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('balance', 'deben_ser',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('balance', 'created_at',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('balance', 'updated_at',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               nullable=True)
    op.create_index(op.f('ix_balance_id'), 'balance', ['id'], unique=False)
    op.alter_column('deudas', 'tipo',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('deudas', 'item',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('deudas', 'created_at',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('deudas', 'updated_at',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               nullable=True)
    op.create_index(op.f('ix_deudas_id'), 'deudas', ['id'], unique=False)
    op.alter_column('gastos', 'concepto',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('gastos', 'tipo_gasto',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('gastos', 'forma_pago',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('gastos', 'mes',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('gastos', 'categoria',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=False)
    op.alter_column('gastos', 'a_pagos',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('gastos', 'no_mens',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('gastos', 'total_meses',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0'))
    op.alter_column('gastos', 'tag',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=True,
               existing_server_default=sa.text("'NA'::text"))
    op.alter_column('gastos', 'se_divide',
               existing_type=sa.BOOLEAN(),
               nullable=True,
               existing_server_default=sa.text('false'))
    op.alter_column('gastos', 'gasto_x_mes',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=True,
               existing_server_default=sa.text("'NA'::text"))
    op.alter_column('gastos', 'created_at',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('gastos', 'updated_at',
               existing_type=postgresql.TIMESTAMP(precision=3),
               type_=sa.DateTime(timezone=True),
               nullable=True)
    op.create_index(op.f('ix_gastos_id'), 'gastos', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_gastos_id'), table_name='gastos')
    op.alter_column('gastos', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               nullable=False)
    op.alter_column('gastos', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('gastos', 'gasto_x_mes',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=False,
               existing_server_default=sa.text("'NA'::text"))
    op.alter_column('gastos', 'se_divide',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('gastos', 'tag',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=False,
               existing_server_default=sa.text("'NA'::text"))
    op.alter_column('gastos', 'total_meses',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('gastos', 'no_mens',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('gastos', 'a_pagos',
               existing_type=sa.BOOLEAN(),
               nullable=False,
               existing_server_default=sa.text('false'))
    op.alter_column('gastos', 'categoria',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('gastos', 'mes',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('gastos', 'forma_pago',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('gastos', 'tipo_gasto',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('gastos', 'concepto',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_index(op.f('ix_deudas_id'), table_name='deudas')
    op.alter_column('deudas', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               nullable=False)
    op.alter_column('deudas', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('deudas', 'item',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('deudas', 'tipo',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.drop_index(op.f('ix_balance_id'), table_name='balance')
    op.alter_column('balance', 'updated_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               nullable=False)
    op.alter_column('balance', 'created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(precision=3),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.alter_column('balance', 'deben_ser',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               nullable=False,
               existing_server_default=sa.text('0'))
    op.alter_column('balance', 'concepto',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.alter_column('balance', 'tipo',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=False)
    op.create_table('formas_pago',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('nombre', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('descripcion', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('formas_pago_pkey'))
    )
    op.create_index(op.f('formas_pago_nombre_key'), 'formas_pago', ['nombre'], unique=True)
    op.create_table('categorias',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('codigo', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('descripcion', sa.TEXT(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('categorias_pkey'))
    )
    op.create_index(op.f('categorias_codigo_key'), 'categorias', ['codigo'], unique=True)
    op.create_table('tipos_gasto',
    sa.Column('id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('nombre', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('descripcion', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('tipos_gasto_pkey'))
    )
    op.create_index(op.f('tipos_gasto_nombre_key'), 'tipos_gasto', ['nombre'], unique=True)
    # ### end Alembic commands ###
